<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    <description>Spring MVC Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:/properties/system.properties" />

    <context:property-placeholder properties-ref="applicationProperties" />

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.lingtoo.wechat.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.lingtoo.wechat.rest" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>
    
    <bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:annotation-driven conversion-service="conversionService" />
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>

    <!--
    <mvc:annotation-driven conversion-service="conversionService"/>
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="registerDefaultFormatters" value="false"/>
        <property name="formatterRegistrars">
            <set>
                <bean class="org.springframework.format.datetime.DateFormatterRegistrar">
                    <property name="formatter" ref="dateFormatter"/>
                </bean>
            </set>
        </property>
    </bean>
    <bean id="dateFormatter" class="org.springframework.format.datetime.DateFormatter">
        <property name="pattern" value="yyyy-MM-dd'T'HH24:hh"/>
    </bean>
-->

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="atom" value="application/atom+xml"/>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/> -->
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/views/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
            </list>
        </property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000" />
		<property name="maxInMemorySize"><value>102400000</value></property>

		<property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
			<mvc:mapping path="/mobile/**" />
            <bean class="com.lingtoo.wechat.interceptor.MobileInterceptor"  />
        </mvc:interceptor>
         <mvc:interceptor>
			<mvc:mapping path="/backend/**" />
			<bean class="com.lingtoo.wechat.interceptor.BackendInterceptor" />
		</mvc:interceptor>
		<!--<mvc:interceptor>
			<mvc:mapping path="/system/**" />
			<bean class="com.lingtoo.wechat.interceptor.SystemInterceptor" />
		</mvc:interceptor>-->
    </mvc:interceptors>

    <!--所有swagger目录的访问，直接访问location指定的目录-->
    <mvc:resources mapping="/swagger/**" location="/WEB-INF/swagger/"/>

    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <mvc:default-servlet-handler/>

    <!-- 定义无需Controller的url<->view直接映射 -->
    <mvc:view-controller path="/" view-name="index"/>
    <!--<mvc:view-controller path="/register" view-name="redirect:${web.views.}"/>-->

    <!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">error/500</prop>
            </props>
        </property>
    </bean>
    -->
</beans>
